name: Build EasyTier-web

on:
  workflow_dispatch:  # 允许手动触发

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-feature=+crt-static"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Debug Directory Structure
      run: |
        pwd
        echo "=== Repository contents ==="
        ls -la
        echo "=== Full directory tree ==="
        find . -type d

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Install Linux Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev build-essential protobuf-compiler

    # 在根目录安装所有前端依赖
    - name: Install Frontend Dependencies
      working-directory: ./easytier-web
      run: |
        pwd
        ls -la
        pnpm install

    # 构建前端库
    - name: Build Frontend-lib
      working-directory: ./easytier-web
      run: |
        pnpm --filter frontend-lib build

    # 构建前端
    - name: Build Frontend
      working-directory: ./easytier-web
      run: |
        pnpm --filter frontend build

    # 构建后端
    - name: Build Backend
      working-directory: ./easytier-web
      env:
        PROTOC: /usr/bin/protoc
      run: |
        pwd
        ls -la
        echo "=== Building ==="
        cargo build --release
        echo "=== Build complete, checking target directory ==="
        ls -R target/release/

    # 打包
    - name: Package Build
      working-directory: ./easytier-web
      run: |
        echo "=== Current directory structure ==="
        pwd
        ls -la
        echo "=== Target directory content ==="
        ls -R target/
        echo "=== Creating release package ==="
        mkdir -p release
        cp target/release/easytier-web release/ || cp target/release/easytier_web release/easytier-web
        cp -r frontend/dist release/
        tar -czf easytier-web-linux.tar.gz release/

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: easytier-web-linux
        path: easytier-web/easytier-web-linux.tar.gz
        retention-days: 5
