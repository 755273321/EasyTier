name: Build EasyTier-web

on:
  workflow_dispatch:  # 允许手动触发

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Debug Initial Structure
      run: |
        echo "=== Current location ==="
        pwd
        echo "=== Repository contents ==="
        ls -la
        echo "=== Detailed tree ==="
        tree || find . -type d

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Install Linux Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev build-essential protobuf-compiler tree

    # 在根目录安装所有前端依赖
    - name: Install Frontend Dependencies
      run: |
        cd easytier-web
        echo "=== Current directory before pnpm install ==="
        pwd
        ls -la
        pnpm install

    # 构建前端库
    - name: Build Frontend-lib
      run: |
        cd easytier-web
        echo "=== Building frontend-lib ==="
        pnpm --filter frontend-lib build
        echo "=== frontend-lib build result ==="
        ls -la frontend-lib/dist || true

    # 构建前端
    - name: Build Frontend
      run: |
        cd easytier-web
        echo "=== Building frontend ==="
        pnpm --filter frontend build
        echo "=== frontend build result ==="
        ls -la frontend/dist || true

    # 构建后端
    - name: Build Backend
      run: |
        cd easytier-web
        echo "=== Building backend ==="
        cargo build --release
        echo "=== Backend build result ==="
        ls -la target/release || true
        find . -type f -name "easytier*"

    # 打包
    - name: Package Build
      run: |
        cd easytier-web
        echo "=== Preparing release package ==="
        mkdir -p release
        echo "=== Finding build artifacts ==="
        find . -type f -name "easytier*"
        echo "=== Copying files ==="
        cp target/release/easytier-web release/ || cp target/release/easytier_web release/easytier-web || echo "No backend binary found"
        cp -r frontend/dist release/ || echo "No frontend dist found"
        echo "=== Release directory contents ==="
        ls -la release/
        tar -czf easytier-web-linux.tar.gz release/

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: easytier-web-linux
        path: easytier-web/easytier-web-linux.tar.gz
        retention-days: 5
